{"ast":null,"code":"var _jsxFileName = \"D:\\\\Trafyai-Site - Copy\\\\Trafyaiweb\\\\client\\\\src\\\\components\\\\common\\\\auth\\\\forget-password\\\\forget-password.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [resetSent, setResetSent] = useState(false);\n  const [error, setError] = useState('');\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    try {\n      await firebase.auth().sendPasswordResetEmail(email);\n      setResetSent(true);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), !resetSent ? /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: \"Password reset email sent. Please check your inbox.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"yuVn7tlBWXdYiQ2g0MZcEw2dY+0=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","firebase","Container","Form","Button","Alert","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","resetSent","setResetSent","error","setError","handleResetPassword","e","preventDefault","auth","sendPasswordResetEmail","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","required","variant","_c","$RefreshReg$"],"sources":["D:/Trafyai-Site - Copy/Trafyaiweb/client/src/components/common/auth/forget-password/forget-password.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\r\n\r\nconst ForgotPassword = () => {\r\n const [email, setEmail] = useState('');\r\n const [resetSent, setResetSent] = useState(false);\r\n const [error, setError] = useState('');\r\n\r\n const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await firebase.auth().sendPasswordResetEmail(email);\r\n      setResetSent(true);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n };\r\n\r\n return (\r\n    <Container className=\"mt-5\">\r\n      <h2>Forgot Password</h2>\r\n      {!resetSent ? (\r\n        <Form onSubmit={handleResetPassword}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Reset Password\r\n          </Button>\r\n        </Form>\r\n      ) : (\r\n        <Alert variant=\"success\">\r\n          Password reset email sent. Please check your inbox.\r\n        </Alert>\r\n      )}\r\n    </Container>\r\n );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}