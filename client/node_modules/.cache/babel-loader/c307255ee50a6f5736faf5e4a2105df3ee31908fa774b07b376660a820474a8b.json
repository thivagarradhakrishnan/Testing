{"ast":null,"code":"import React,{useState}from\"react\";import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faEye,faEyeSlash}from'@fortawesome/free-solid-svg-icons';import'./Login.css';import{Link,useNavigate}from'react-router-dom';import firebase from'firebase/compat/app';import'firebase/compat/auth';import{Helmet}from'react-helmet';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[showPassword,setShowPassword]=useState(false);// State to toggle password visibility\nconst[emailError,setEmailError]=useState('');const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();try{if(validateForm()){const userCredential=await firebase.auth().signInWithEmailAndPassword(email,password);// User successfully logged in\nif(userCredential){navigate('/');}}}catch(error){alert(error.message);}};const validateEmail=email=>{const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;return emailRegex.test(email);};const handleEmailBlur=()=>{if(!validateEmail(email)){setEmailError('Invalid email address');}else{setEmailError('');}};const validateForm=()=>{let isValid=true;// Email validation\nif(!email||!validateEmail(email)){setEmailError('Invalid email address');isValid=false;}else{setEmailError('');}return isValid;};const handleGoogleSignIn=async()=>{try{const provider=new firebase.auth.GoogleAuthProvider();await firebase.auth().signInWithPopup(provider);alert(\"login with Google Successfully\");navigate('/');}catch(err){alert(err.message);}};const togglePasswordVisibility=()=>{setShowPassword(!showPassword);};return/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"meta\",{name:\"viewport\",content:\"width=device-width, initial-scale=1.0\"}),/*#__PURE__*/_jsx(\"link\",{rel:\"canonical\",href:\"https://www.trafyai.com/login\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"login-heading\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Login to Your Account\"})}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Email\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter email\",required:true,autoComplete:\"off\",name:\"email\",className:\"email-holder \".concat(emailError?'error':''),value:email,onChange:e=>setEmail(e.target.value),onBlur:handleEmailBlur}),emailError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:emailError})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Password\",children:/*#__PURE__*/_jsx(\"div\",{className:\"password-input\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:showPassword?\"text\":\"password\",placeholder:\"Enter password\",required:true,autoComplete:\"off\",name:\"password\",className:\"password-holder\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{className:\"password-toggle\",onClick:togglePasswordVisibility,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:showPassword?faEyeSlash:faEye})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"login-button\",children:/*#__PURE__*/_jsx(\"button\",{className:\"signup-btn\",type:\"submit\",children:\"Login\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"}),/*#__PURE__*/_jsx(\"div\",{className:\"google-signin\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"login-with-google-btn\",onClick:handleGoogleSignIn,children:\"Login with Google\"})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\" Signup\"})]})]})]})]});};export default Login;","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faEye","faEyeSlash","Link","useNavigate","firebase","Helmet","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","showPassword","setShowPassword","emailError","setEmailError","navigate","handleSubmit","e","preventDefault","validateForm","userCredential","auth","signInWithEmailAndPassword","error","alert","message","validateEmail","emailRegex","test","handleEmailBlur","isValid","handleGoogleSignIn","provider","GoogleAuthProvider","signInWithPopup","err","togglePasswordVisibility","className","children","name","content","rel","href","onSubmit","type","placeholder","required","autoComplete","concat","value","onChange","target","onBlur","onClick","icon","to"],"sources":["D:/Trafyai-Site/Trafyaiweb/client/src/components/common/auth/login/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport './Login.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\r\n    const [emailError, setEmailError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (validateForm()) {\r\n                const userCredential = await firebase.auth().signInWithEmailAndPassword(email, password);\r\n                // User successfully logged in\r\n                if (userCredential) {\r\n                    navigate('/');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            alert(error.message);\r\n        }\r\n    }\r\n    const validateEmail = (email) => {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return emailRegex.test(email);\r\n    }\r\n\r\n    const handleEmailBlur = () => {\r\n        if (!validateEmail(email)) {\r\n            setEmailError('Invalid email address');\r\n        } else {\r\n            setEmailError('');\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        // Email validation\r\n        if (!email || !validateEmail(email)) {\r\n            setEmailError('Invalid email address');\r\n            isValid = false;\r\n        } else {\r\n            setEmailError('');\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    const handleGoogleSignIn = async () => {\r\n        try {\r\n            const provider = new firebase.auth.GoogleAuthProvider();\r\n            await firebase.auth().signInWithPopup(provider);\r\n            alert(\"login with Google Successfully\");\r\n            navigate('/'); \r\n        } catch (err) {\r\n            alert(err.message);\r\n        }\r\n    }\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <Helmet>\r\n        <title>Login</title>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <link rel=\"canonical\" href=\"https://www.trafyai.com/login\" />\r\n      \r\n      </Helmet>\r\n            <div className=\"login-container\">\r\n                <div className=\"login-heading\"><h1>Login to Your Account</h1></div>\r\n\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    \r\n                    <div className=\"Email\">\r\n                        <input type=\"email\" placeholder=\"Enter email\" required autoComplete=\"off\" name=\"email\" className={`email-holder ${emailError ? 'error' : ''}`} value={email} onChange={(e) => setEmail(e.target.value)} onBlur={handleEmailBlur}/>\r\n                        {emailError && <div className=\"error-message\">{emailError}</div>}\r\n                    </div>\r\n                    <div className=\"Password\">\r\n                        <div className=\"password-input\">\r\n                            <div><input type={showPassword ? \"text\" : \"password\"} placeholder=\"Enter password\" required autoComplete=\"off\" name=\"password\" className=\"password-holder\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                            <span className=\"password-toggle\" onClick={togglePasswordVisibility}>\r\n                                <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"login-button\">\r\n                        <button className=\"signup-btn\" type=\"submit\">Login</button>\r\n                    </div>\r\n\r\n                    <div className=\"divider\"></div>\r\n\r\n                    <div className=\"google-signin\">\r\n                        <button type=\"button\" className=\"login-with-google-btn\" onClick={handleGoogleSignIn}>Login with Google</button>\r\n                    </div>\r\n\r\n                    <p>Don't have an account? <Link to=\"/signup\"> Signup</Link></p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}